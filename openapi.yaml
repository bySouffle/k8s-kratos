# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
  title: Info API
  version: 0.0.1
paths:
  /v1/info/create/{param.msg}:
    get:
      tags:
        - Info
      operationId: Info_CreateInfo
      parameters:
        - name: param.msg
          in: path
          required: true
          schema:
            type: string
        - name: param.id
          in: query
          schema:
            type: integer
            format: int32
        - name: param.msg
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInfoReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/info/delete/{param.msg}:
    get:
      tags:
        - Info
      operationId: Info_DeleteInfo
      parameters:
        - name: param.msg
          in: path
          required: true
          schema:
            type: string
        - name: param.id
          in: query
          schema:
            type: integer
            format: int32
        - name: param.msg
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInfoReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/info/get/{param.msg}:
    get:
      tags:
        - Info
      operationId: Info_GetInfo
      parameters:
        - name: param.msg
          in: path
          required: true
          schema:
            type: string
        - name: param.id
          in: query
          schema:
            type: integer
            format: int32
        - name: param.msg
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInfoReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/info/list/{param.msg}:
    get:
      tags:
        - Info
      operationId: Info_ListInfo
      parameters:
        - name: param.msg
          in: path
          required: true
          schema:
            type: string
        - name: param.id
          in: query
          schema:
            type: integer
            format: int32
        - name: param.msg
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInfoReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/info/update/{param.msg}:
    get:
      tags:
        - Info
      operationId: Info_UpdateInfo
      parameters:
        - name: param.msg
          in: path
          required: true
          schema:
            type: string
        - name: param.id
          in: query
          schema:
            type: integer
            format: int32
        - name: param.msg
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInfoReply'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
components:
  schemas:
    CreateInfoReply:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Resp'
    DeleteInfoReply:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Resp'
    GetInfoReply:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Resp'
    GoogleProtobufAny:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the serialized message.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
    ListInfoReply:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Resp'
    Resp:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
    Status:
      type: object
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/GoogleProtobufAny'
          description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    UpdateInfoReply:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Resp'
tags:
  - name: Info
